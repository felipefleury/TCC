
service: autenticacao # NOTE: update this with your service name


custom:
  tableName: 'Usuarios-${self:provider.stage}'


provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-2
  environment:
    USUARIOS_TABLE: ${self:custom.tableName}
    AWS_DEPLOY_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["Usuarios", "Arn" ] }
        - { "Fn::Join": [ "/", [ 
           { "Fn::GetAtt": ["Usuarios", "Arn" ] }, "index", "roomIndex" 
          ]]}
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["Usuarios", "Arn" ] }, "index", "userIndex" 
          ]]}

functions:
  login:
    handler: handler.authenticate
    events:
      - http: 
          method: POST
          path: /login
          private: false
  createUser:
    handler: handler.createUser
    events:
      - http: 
          method: POST
          path: /users
          private: false


resources:
  Resources:
    Usuarios:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}