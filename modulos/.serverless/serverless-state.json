{
  "service": {
    "service": "autenticacao",
    "serviceObject": {
      "name": "autenticacao"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "environment": {
        "USUARIOS_TABLE": "Usuarios-dev",
        "PRODUTOS_TABLE": "Produtos-dev",
        "AWS_DEPLOY_REGION": "us-east-2",
        "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
        "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "Produtos",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "Usuarios",
                "Arn"
              ]
            },
            {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "Usuarios",
                      "Arn"
                    ]
                  },
                  "index",
                  "roomIndex"
                ]
              ]
            },
            {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "Usuarios",
                      "Arn"
                    ]
                  },
                  "index",
                  "userIndex"
                ]
              ]
            }
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "EstoqueFornecedorLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-estoqueFornecedor"
            }
          },
          "EstoqueProdutoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-estoqueProduto"
            }
          },
          "ProdutosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-produtos"
            }
          },
          "ProdutosBuscarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-produtosBuscar"
            }
          },
          "ProdutoIncluirLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-produtoIncluir"
            }
          },
          "ApagarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-apagar"
            }
          },
          "AlterarLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-alterar"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-login"
            }
          },
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-createUser"
            }
          },
          "ListarUsuariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-listarUsuarios"
            }
          },
          "DeleteUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/autenticacao-dev-deleteUser"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "autenticacao",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-estoqueFornecedor:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-estoqueProduto:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtos:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtosBuscar:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtoIncluir:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-apagar:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-alterar:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-login:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-createUser:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-listarUsuarios:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-deleteUser:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-estoqueFornecedor:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-estoqueProduto:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtos:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtosBuscar:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-produtoIncluir:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-apagar:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-alterar:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-login:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-createUser:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-listarUsuarios:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/autenticacao-dev-deleteUser:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "autenticacao",
                    "dev",
                    "us-east-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EstoqueFornecedorLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-estoqueFornecedor",
              "Handler": "estoque/estoque.estoqueFornecedor",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "EstoqueFornecedorLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "EstoqueFornecedorLambdaVersionfPVeu4aW5CLLxq9ziE3gyX0dviAZMXbR5xhUcdLac0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EstoqueFornecedorLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "EstoqueProdutoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-estoqueProduto",
              "Handler": "estoque/estoque.estoqueProduto",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "EstoqueProdutoLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "EstoqueProdutoLambdaVersioncvVwnOwlWEfnURYAvxTg16xFSDp3sHju6FzstOB1aqs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EstoqueProdutoLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ProdutosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-produtos",
              "Handler": "cadastros/produtos.listar",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "ProdutosLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProdutosLambdaVersionDAg5LYPcQZQdtCBXS9jJmiXBz5Gareq1rLrwnT98": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProdutosLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ProdutosBuscarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-produtosBuscar",
              "Handler": "cadastros/produtos.buscar",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "ProdutosBuscarLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProdutosBuscarLambdaVersiondc6ZSikWUYH3kDxmfdrNqNoxNDdYOj4qRIszWGgvOg8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProdutosBuscarLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ProdutoIncluirLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-produtoIncluir",
              "Handler": "cadastros/produtos.incluir",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "ProdutoIncluirLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProdutoIncluirLambdaVersion4gzD3DAuoqHtuZpvNA8HaOHYkmqQ7tQnsPksQ0kO4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProdutoIncluirLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ApagarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-apagar",
              "Handler": "cadastros/produtos.apagar",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "ApagarLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ApagarLambdaVersionISfwcLjwwEqYM9LQCvMRG9saq7akk0DJuFvOGCc8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApagarLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "AlterarLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-alterar",
              "Handler": "cadastros/produtos.alterar",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "AlterarLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "AlterarLambdaVersionHG2TNe9rdxQQHDQSS7fsQbHLFjwR7r4cZlomMfu08": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AlterarLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-login",
              "Handler": "autenticacao/handler.authenticate",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "LoginLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "LoginLambdaVersionXgbE6jIK1VYTRC8rKDFoKWAOkNv7z2qJGhZ5e2yqPlU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-createUser",
              "Handler": "autenticacao/handler.createUser",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "CreateUserLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateUserLambdaVersion3g1oRTMCssqPStFScfVg2RAiJemC2o0zkOtsC2lErw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUserLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ListarUsuariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-listarUsuarios",
              "Handler": "autenticacao/handler.listarUsuarios",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "ListarUsuariosLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ListarUsuariosLambdaVersiona4mkBtjWzXIzhobjWVhv54HvAVIFxQnVdgiQi8rpH4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListarUsuariosLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "DeleteUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z/autenticacao.zip"
              },
              "FunctionName": "autenticacao-dev-deleteUser",
              "Handler": "autenticacao/handler.deleteUser",
              "MemorySize": 128,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USUARIOS_TABLE": "Usuarios-dev",
                  "PRODUTOS_TABLE": "Produtos-dev",
                  "AWS_DEPLOY_REGION": "us-east-2",
                  "JWT_ENCRYPTION_CODE": "CE2784CB-EFF6-4AFB-A56F-5EF156E85F80",
                  "SQLCONNECTIONSTRING": "Server=maria.cwjvvoewjryp.us-east-1.rds.amazonaws.com;Database=TCC_Estoque;User Id=userTCC;Password=mg54sasd442@;"
                }
              }
            },
            "DependsOn": [
              "DeleteUserLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DeleteUserLambdaVersioniq2y0FMFKePQZX9DoNHFDsRPn1OvPpdLlP0mi5hh3o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUserLambdaFunction"
              },
              "CodeSha256": "LFb/Ix4kvZkMqB0boUKwkcUi/D9DqOvFBJIJDrOvBZQ="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-autenticacao",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceFornecedores": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fornecedores",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFornecedoresIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFornecedores"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFornecedoresIdVarEstoque": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFornecedoresIdVar"
              },
              "PathPart": "estoque",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProdutos": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "produtos",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProdutosIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProdutos"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProdutosIdVarEstoque": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProdutosIdVar"
              },
              "PathPart": "estoque",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersRoleVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "{role}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFornecedoresIdVarEstoqueOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFornecedoresIdVarEstoque"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProdutosIdVarEstoqueOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutosIdVarEstoque"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProdutosOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,POST,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProdutosIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutosIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersRoleVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersRoleVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFornecedoresIdVarEstoquePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFornecedoresIdVarEstoque"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EstoqueFornecedorLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosIdVarEstoqueGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutosIdVarEstoque"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EstoqueProdutoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProdutosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosIdVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutosIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProdutosBuscarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProdutoIncluirLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApagarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProdutosIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProdutosIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AlterarLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersRoleVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersRoleVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListarUsuariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1535507638632": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFornecedoresIdVarEstoquePost",
              "ApiGatewayMethodProdutosIdVarEstoqueGet",
              "ApiGatewayMethodProdutosGet",
              "ApiGatewayMethodProdutosIdVarGet",
              "ApiGatewayMethodProdutosPost",
              "ApiGatewayMethodProdutosDelete",
              "ApiGatewayMethodProdutosIdVarPut",
              "ApiGatewayMethodLoginPost",
              "ApiGatewayMethodUsersPost",
              "ApiGatewayMethodUsersRoleVarGet",
              "ApiGatewayMethodUsersDelete"
            ]
          },
          "EstoqueFornecedorLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EstoqueFornecedorLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EstoqueProdutoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EstoqueProdutoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ProdutosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProdutosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ProdutosBuscarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProdutosBuscarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ProdutoIncluirLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProdutoIncluirLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApagarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApagarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AlterarLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AlterarLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListarUsuariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListarUsuariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Usuarios": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "username",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "role",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "username-index",
                  "KeySchema": [
                    {
                      "AttributeName": "username",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "KEYS_ONLY"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                  }
                },
                {
                  "IndexName": "userrole-index",
                  "KeySchema": [
                    {
                      "AttributeName": "role",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "NonKeyAttributes": [
                      "nome"
                    ],
                    "ProjectionType": "INCLUDE"
                  },
                  "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                  }
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "Usuarios-dev"
            }
          },
          "Produtos": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "Produtos-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EstoqueFornecedorLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EstoqueFornecedorLambdaVersionfPVeu4aW5CLLxq9ziE3gyX0dviAZMXbR5xhUcdLac0"
            }
          },
          "EstoqueProdutoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EstoqueProdutoLambdaVersioncvVwnOwlWEfnURYAvxTg16xFSDp3sHju6FzstOB1aqs"
            }
          },
          "ProdutosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProdutosLambdaVersionDAg5LYPcQZQdtCBXS9jJmiXBz5Gareq1rLrwnT98"
            }
          },
          "ProdutosBuscarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProdutosBuscarLambdaVersiondc6ZSikWUYH3kDxmfdrNqNoxNDdYOj4qRIszWGgvOg8"
            }
          },
          "ProdutoIncluirLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProdutoIncluirLambdaVersion4gzD3DAuoqHtuZpvNA8HaOHYkmqQ7tQnsPksQ0kO4"
            }
          },
          "ApagarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApagarLambdaVersionISfwcLjwwEqYM9LQCvMRG9saq7akk0DJuFvOGCc8"
            }
          },
          "AlterarLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AlterarLambdaVersionHG2TNe9rdxQQHDQSS7fsQbHLFjwR7r4cZlomMfu08"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionXgbE6jIK1VYTRC8rKDFoKWAOkNv7z2qJGhZ5e2yqPlU"
            }
          },
          "CreateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUserLambdaVersion3g1oRTMCssqPStFScfVg2RAiJemC2o0zkOtsC2lErw"
            }
          },
          "ListarUsuariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListarUsuariosLambdaVersiona4mkBtjWzXIzhobjWVhv54HvAVIFxQnVdgiQi8rpH4"
            }
          },
          "DeleteUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUserLambdaVersioniq2y0FMFKePQZX9DoNHFDsRPn1OvPpdLlP0mi5hh3o"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "tableName": "Usuarios-dev",
      "tableProdutos": "Produtos-dev"
    },
    "pluginsData": {},
    "functions": {
      "estoqueFornecedor": {
        "handler": "estoque/estoque.estoqueFornecedor",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "post",
              "path": "fornecedores/{id}/estoque",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-estoqueFornecedor",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "estoqueProduto": {
        "handler": "estoque/estoque.estoqueProduto",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "produtos/{id}/estoque",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-estoqueProduto",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "produtos": {
        "handler": "cadastros/produtos.listar",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "produtos",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-produtos",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "produtosBuscar": {
        "handler": "cadastros/produtos.buscar",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "produtos/{id}",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-produtosBuscar",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "produtoIncluir": {
        "handler": "cadastros/produtos.incluir",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "post",
              "path": "produtos",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-produtoIncluir",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "apagar": {
        "handler": "cadastros/produtos.apagar",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "produtos",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-apagar",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "alterar": {
        "handler": "cadastros/produtos.alterar",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "put",
              "path": "produtos/{id}",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-alterar",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "login": {
        "handler": "autenticacao/handler.authenticate",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "post",
              "path": "login",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-login",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "createUser": {
        "handler": "autenticacao/handler.createUser",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "post",
              "path": "users",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-createUser",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "listarUsuarios": {
        "handler": "autenticacao/handler.listarUsuarios",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "get",
              "path": "users/{role}",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-listarUsuarios",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "deleteUser": {
        "handler": "autenticacao/handler.deleteUser",
        "memorySize": 128,
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "users",
              "private": false,
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "autenticacao-dev-deleteUser",
        "package": {},
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "Usuarios": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "username",
                "AttributeType": "S"
              },
              {
                "AttributeName": "role",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "username-index",
                "KeySchema": [
                  {
                    "AttributeName": "username",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "KEYS_ONLY"
                },
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              },
              {
                "IndexName": "userrole-index",
                "KeySchema": [
                  {
                    "AttributeName": "role",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "NonKeyAttributes": [
                    "nome"
                  ],
                  "ProjectionType": "INCLUDE"
                },
                "ProvisionedThroughput": {
                  "ReadCapacityUnits": 1,
                  "WriteCapacityUnits": 1
                }
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "Usuarios-dev"
          }
        },
        "Produtos": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "Produtos-dev"
          }
        }
      },
      "Outputs": {}
    },
    "artifact": "/Users/felipefleury/TCC/projeto/modulos/.serverless/autenticacao.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/autenticacao/dev/1535507638289-2018-08-29T01:53:58.289Z",
    "artifact": "autenticacao.zip"
  }
}